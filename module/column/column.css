/* ======  column  ====== */
.column{
  --width: 100%;
  --blank: 2%;
}

.column{
  width: var(--width);
}

.column:after {clear:both; content:"."; display:block; font-size:0; height:0; line-height:0;  min-height:0; visibility:hidden; *zoom:1;}

.column > [class*=col-]{
  margin-left: var(--blank);
  float: left;
}

.column > [class*=col-]:first-child
{
  margin-left: 0;
}


@each $x,$y in (2),(1){
  .column .col-$(x)-$(y){
    width: calc( ((var(--width) - var(--blank)*($(x)-1) ) / $(x)) * $(y) + var(--blank)*($(y)-1) );
  }
}

@each $x,$y in (3,3),(2,1){
  .column .col-$(x)-$(y){
    width: calc( ((var(--width) - var(--blank)*($(x)-1) ) / $(x)) * $(y) + var(--blank)*($(y)-1) );
  }
}

@each $x,$y in (4,4,4),(3,2,1){
  .column .col-$(x)-$(y){
    width: calc( ((var(--width) - var(--blank)*($(x)-1) ) / $(x)) * $(y) + var(--blank)*($(y)-1) );
  }
}

@each $x,$y in (5,5,5,5),(4,3,2,1){
  .column .col-$(x)-$(y){
    width: calc( ((var(--width) - var(--blank)*($(x)-1) ) / $(x)) * $(y) + var(--blank)*($(y)-1) );
  }
}



/*兼容*/
@each $x,$y in (2),(1){
  .ie6 .column .col-$(x)-$(y){
     margin-left: expression(this.previousSibling==null?'0':'var(--blank)');
    float: left;
  }
}

@each $x,$y in (3,3),(2,1){
  .ie6 .column .col-$(x)-$(y){
     margin-left: expression(this.previousSibling==null?'0':'var(--blank)');
    float: left;
  }
}

@each $x,$y in (4,4,4),(3,2,1){
  .ie6 .column .col-$(x)-$(y){
     margin-left: expression(this.previousSibling==null?'0':'var(--blank)');
    float: left;
  }
}

@each $x,$y in (5,5,5,5),(4,3,2,1){
  .ie6 .column .col-$(x)-$(y){
    margin-left: expression(this.className.indexOf('col-')>=0&&this.previousSibling==null?'0':'var(--blank)');
    float: left;
  }
}